DROP TABLE IF EXISTS BUILDSHELVES;
CREATE TABLE BUILDSHELVES AS
	WITH A AS (
		SELECT 
			WORK_ID,
			TAG_NAME,
			CAST(MAX(COUNT) AS BIGINT) AS COUNTER
		FROM ENGINE_API_SHELVES
		WHERE TAG_NAME NOT IN ('to-read', 
							   'currently-reading', 
							   'owned', 
							   'books-i-own', 
							   'kindle', 
							   'default',
							   'library',
							   'to-buy',
							   'owned-books',
							   'my-books',
							   'i-own',
							   'e-book')
		GROUP BY WORK_ID, TAG_NAME
	),
	B AS (
		SELECT
			TAG_NAME,
			COUNT(DISTINCT WORK_ID) AS TAG_NUM_WORK,
			SUM(COUNTER) AS TAG_TOTAL_COUNT
		FROM A
		GROUP BY TAG_NAME
	),
	C AS (
		SELECT DISTINCT TAG_NAME
		FROM B
	),
	D AS (
		SELECT 
			TAG_NAME,
			ROW_NUMBER() OVER(ORDER BY TAG_NAME) AS TAG_ID
		FROM C
	)
	SELECT 
		WORK_ID,
        TAG_NAME,
		CAST(TAG_ID AS INT) AS TAG_ID,
		CAST(COUNTER AS INT) AS COUNTER,
		CAST(TAG_TOTAL_COUNT AS INT) AS TAG_TOTAL_COUNT,
		CAST(TAG_NUM_WORK AS INT) AS TAG_NUM_WORK,
		CAST(COUNTER AS FLOAT) / TAG_TOTAL_COUNT AS PERC,
		ROW_NUMBER() OVER(PARTITION BY WORK_ID ORDER BY CAST(COUNTER AS FLOAT) / TAG_TOTAL_COUNT DESC) AS RANKER
	FROM A
	LEFT JOIN B
	USING(TAG_NAME)
	LEFT JOIN D
	USING(TAG_NAME);
	
CREATE INDEX BUILDSHELVES_WORK
ON BUILDSHELVES (WORK_ID);

CREATE INDEX BUILDSHELVES_TAG
ON BUILDSHELVES (TAG_ID);

SELECT *
FROM ENGINE_API_BOOKS
WHERE TITLE = 'The Brothers Karamazov'
LIMIT 10;

WITH A AS (
	SELECT TAG_ID
	FROM BUILDSHELVES
	WHERE WORK_ID = 3393910
	ORDER BY PERC DESC
	LIMIT 20
)
SELECT TITLE, WORK_ID, COUNT(DISTINCT TAG_ID) AS NUM_OVERLAP
FROM A
INNER JOIN BUILDSHELVES
USING(TAG_ID)
INNER JOIN ENGINE_API_BOOKS
USING(WORK_ID)
WHERE WORK_ID != 3271542
AND RANKER <= 20
GROUP BY TITLE, WORK_ID
ORDER BY NUM_OVERLAP DESC;

SELECT *
FROM ENGINE_API_BUILDWORKS
WHERE BOOK_ID = 395058;
WHERE TITLE = 'Infinite Jest';